#!/bin/bash


DEPOT_TOOLS="depot_tools"
SHOW_HELP_MENU=
VERSION="1.0.2"
GET_DEPOT_TOOL=
CURRENT_LOCATION=$(pwd)
export PATH=$PATH:/$(pwd)/depot_tools


help_menu () {
    echo "Usage: crosenv [repo command=n] [code source=n]"
    echo "Commands:"
    echo "  b : repo init [firmware branch]"
    echo "  s : repo sync"
    echo "  c : cros_sdk"
    echo "  d : cros_sdk --delete"
    echo "  r : cros_sdk --replace"
    echo "  h : help"
}

get_depot_tool () {
    read -p "depot_tool is not exsit, press 'y' for download depot tool: " answer
    if test "$answer" = "y" || test "$answer" = "Y" 
    then
        echo "download now..."
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
    fi
}

crosenv_version() {
	echo "crosenv version ${VERSION}"
}

repo_init() {
    echo "------> repo init"
}

repo_sync() {
    echo "------> repo sync"
    repo sync
}

cros_del() {
    echo "------> cros delete"
    cros_sdk --delete
}

cros_replace() {
    echo "------> cros replace"
    cros_sdk --replace
}
crossdk(){
    echo "------> cros_sdk"
    cros_sdk --no-ns-pid
}
###########################################################
#
# get arg
#
args=$(getopt -l version,help,init,sync,delete,replace,cros,debug -o vhbscdr -- "$@")
getopt_ret=$?
eval set -- "${args}"

if [ ${getopt_ret} != 0 ]; then
	SHOW_HELP_MENU=1
fi

if [ ! -d "${DEPOT_TOOLS}" ]; then
    GET_DEPOT_TOOL=1
fi

if [ "${GET_DEPOT_TOOL}" ]; then
    get_depot_tool
fi

while true ; do
	case "$1" in
		-v|--version)		shift; crosenv_version; exit 0;;
		-h|--help)		    shift; SHOW_HELP_MENU=1;;
        -b|--init)          shift; repo_init; exit 0;;
        -s|--sync)          shift; repo_sync; exit 0;;
        -c|--cros)          shift; crossdk; exit 0;;
        -d|--delete)        shift; cros_del; exit 0;;
        -r|--replace)       shift; cros_replace; exit 0;; 
		--)			        shift; break;;
		*)			break;;
	esac
done
if [ "${SHOW_HELP_MENU}" ]; then
    help_menu	
	exit 0
fi
