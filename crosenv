#!/bin/sh


DEPOT_TOOLS="depot_tools"
SHOW_HELP_MENU=
VERSION="1.0.4"
GET_DEPOT_TOOL=
CURRENT_LOCATION=$(pwd)
export PATH=$PATH:/$(pwd)/depot_tools

# Text STYLE variables
BOLD="\033[1m"
RED='\033[38;5;9m'
GREEN='\033[38;5;2m'
ORANGE_RED="\033[38;5;202m"
C_DODGERBLUE2="\033[38;5;27m"
NC='\033[0m' # No Color


_echo_color() {
	printf "${1}%s${NC}\n" "$2"
}
_printf_color() {
	printf "${1}%s" "$2"
	_echo_color "${NC}" ""
}

help_menu () {
    echo "Usage: crosenv [repo command=n] [code source=n]"
    echo "Commands:"
    echo "  v : crosenv version"
    echo "  i : repo init [firmware branch] [default : ToT]"
    echo "  s : repo sync"
    echo "  c : cros_sdk"
    echo "  d : cros_sdk --delete"
    echo "  r : cros_sdk --replace"
    echo "  h : help"
}

get_depot_tool () {
    read -p "depot_tool is not exsit, press 'y' for download depot tool: " answer
    if test "$answer" = "y" || test "$answer" = "Y" 
    then
        echo "download now..."
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
    fi
}

crosenv_version() {
	echo "crosenv version ${VERSION}"
}

repo_init() {
    _printf_color "${BLUE}" "------> repo init"
    echo "repo init $1"
    _printf_color "${NC}" ""
    if [ "$1" = "ToT" ]; then
        repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git
    else
        repo init -u https://chromium.googlesource.com/chromiumos/manifest.git -b $1 -g firmware
    fi
}

repo_sync() {
    _printf_color "${BLUE}" "------> repo sync"
    _printf_color "${NC}" ""
    repo sync -n
}

cros_del() {
    _printf_color "${GREEN}" "------> cros  delete"
    _printf_color "${NC}" ""
    cros_sdk --delete
}

cros_replace() {
    _printf_color "${GREEN}" "------> cros replace"
    _printf_color "${NC}" ""
    cros_sdk --replace
}
crossdk(){
    _printf_color "${GREEN}" "------> cros_sdk"
    _printf_color "${NC}" ""
    cros_sdk --no-ns-pid
}

die() {
  echo "${0##*/}: error: $*" >&2
  exit 1
}


###########################################################
main() {

    local GET_DEPOT_TOOL="FLASE"
    local branch_name=""
    local init_flag="false"
    local show_help=""
    local getpot_ret=""

    while getopts 'vhi:scdr' flag; do
    case ${flag} in
      h) help_menu ;;
      v) crosenv_version ;;
      i) init_flag="true"
         branch_name="${OPTARG}" ;;
      s) repo_sync ;; 
      c) crossdk ;;
      d) cros_del ;;
      r) cros_replace ;;
      *) die "invalid option found" ;;
     esac
    done

    if [ ! -d $(pwd)/depot_tools ]; then
       get_depot_tool 
    fi
    
    if [ "$init_flag" = "true" ]; then
        repo_init ${branch_name}
    fi

}
main "$@"
