#!/bin/bash

set -e
set -u
set -o pipefail

readonly DEPOT_TOOLS="depot_tools"
readonly VERSION="1.0.4"

# Text style variables
readonly BOLD="\033[1m"
readonly RED='\033[38;5;9m'
readonly GREEN='\033[38;5;2m'
readonly ORANGE_RED="\033[38;5;202m"
readonly C_DODGERBLUE2="\033[38;5;27m"
readonly NC='\033[0m' # No Color

get_depot_tool() {
  local answer
  read -p "depot_tools is not installed, press 'y' to download depot_tools: " answer
  if [[ "$answer" =~ ^[Yy]$ ]]; then
    echo "Downloading depot_tools..."
    git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
  fi
}

crosenv_version() {
  printf "crosenv version %s\n" "$VERSION"
}

repo_init() {
  local branch_name="$1"
  printf "------> repo init\n"
  if [[ "$branch_name" == "ToT" ]]; then
    repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.git -b stable
  else
    repo init -u https://chromium.googlesource.com/chromiumos/manifest.git -b "$branch_name" -g firmware
  fi
}

repo_sync() {
  printf "------> repo sync\n"
  repo sync --force-sync -j100
}

cros_del() {
  printf "------> cros_sdk --delete\n"
  cros_sdk --delete
}

cros_replace() {
  printf "------> cros_sdk --replace\n"
  cros_sdk --replace
}

crossdk() {
  printf "------> cros_sdk\n"
  cros_sdk --no-ns-pid
}

help_menu() {
  printf "Usage: crosenv [repo command=n] [code source=n]\n"
  printf "Commands:\n"
  printf "  v : crosenv version\n"
  printf "  i : repo init [firmware branch] [default: ToT]\n"
  printf "  s : repo sync\n"
  printf "  c : cros_sdk\n"
  printf "  d : cros_sdk --delete\n"
  printf "  r : cros_sdk --replace\n"
  printf "  h : help\n"
}

die() {
  printf "%s: error: %s\n" "${0##*/}" "$*" >&2
  exit 1
}

main() {
  local init_flag=false
  local branch_name=""
  local show_help=""
  local getpot_ret=""

  while getopts 'vhi:scdr' flag; do
    case "$flag" in
      h) show_help=true ;;
      v) crosenv_version ;;
      i) init_flag=true
         branch_name="$OPTARG" ;;
      s) repo_sync ;;
      c) crossdk ;;
      d) cros_del ;;
      r) cros_replace ;;
      *) die "invalid option found" ;;
    esac
  done

  if [[ ! -d "$(pwd)/depot_tools" ]]; then
    get_depot_tool
  fi

  if [[ "$init_flag" == true ]]; then
    repo_init "$branch_name"
  fi

  if [[ "$show_help" == true ]]; then
    help_menu
  fi
}

main "$@"